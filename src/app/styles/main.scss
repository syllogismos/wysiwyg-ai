@import "variables";
@import "mixins";
@import "bootstrap/scss/bootstrap";
@import "bourbon/app/assets/stylesheets/bourbon";
@import "helpers/height";
@import "helpers/margin";
@import "helpers/padding";
@import "helpers/width";
@import "helpers/text";

body,
html {
  height: 100%;
  min-height: 100%;
}

body {
  font-family: $font-family;
  font-weight: 500;
  -webkit-font-smoothing: antialiased;
  -moz-font-smoothing: antialiased;
  -ms-font-smoothing: antialiased;
  font-smoothing: antialiased;
  padding: 0;
  margin: 0;
  overflow-x: hidden;
  position: relative;
  @include font-size(14px);
}

::-webkit-scrollbar {
  display: none;
  width: 0 !important;
}

@each $key, $value in $default-palette {
  [data-navbar="#{$key}"],
  [data-sidebar="#{$key}"],
  [data-background="#{$key}"] {
    a,
    .btn {
      color: map-get($value, "color");
    }
  }
}

input,
select {
  font-family: $font-family;
}

@include selection {
  background-color: map-get($bootstrap-colors, "warning");
}

.hidden {
  display: none;
}

//hide pseudo elements
.no-before {
  &:before {
    display: none !important;
  }
}

.no-after {
  &:after {
    display: none !important;
  }
}

.loading {
  .pace {
    display: none;
  }
}

.separator {
  flex: 1;
}

//hide elements for fake loader
.loading body {
  .navbar,
  .top-navigation,
  .jumbotron,
  .left-sidebar-placeholder,
  .left-sidebar,
  .right-sidebar,
  .theme-config-backdrop,
  .left-sidebar-backdrop,
  .right-sidebar-backdrop,
  *::before,
  *::after,
  > .container-fluid {
    visibility: hidden !important;
  }
}

//backdrops
.left-sidebar-backdrop {
  @include backdrop($zindex-navbar-fixed + 5);
}

.right-sidebar-backdrop {
  @include backdrop($zindex-navbar-fixed + 4);
}

//default backgrounds and colors for every layout
@each $key, $value in $default-palette {
  [data-layout][data-background="#{$key}"] {
    html:not(.loading) & {
      background-color: map-get($value, "background-color");
      color: map-get($value, "color");
    }
  }
}

.sidebar-heading {
  display: none;
}

@for $i from 1 through 6 {
  .sidebar-heading {
    &[data-sidebar-heading="#{$i}"] {
      display: block;
    }
  }
}

.page {
  > .row {
    margin-bottom: $side-margin;
    padding-bottom: 0;
  }
  //angular 4 only
  [ng-version] > .row {
    margin-bottom: $side-margin;
    padding-bottom: 0;
  }
}

.no-bg,
.bg-transparent {
  background-color: transparent !important;
}
$colors: map-merge(map-merge(map-merge($colors, $bootstrap-colors), $social-media-colors), $background-colors
);

@each $key, $value in $colors {
  .bg-#{$key} {
    background-color: $value !important;
  }

  .bg-hover-#{$key} {
    &:hover,
    &:active,
    &:focus {
      background-color: $value !important;
    }
  }

  .color-#{$key} {
    color: $value !important;
  }

  .color-hover-#{$key} {
    &:hover,
    &:active,
    &:focus {
      color: $value !important;
    }
  }

  .border-color-#{$key} {
    color: $value !important;
  }

  .border-color-hover-#{$key} {
    &:hover,
    &:active,
    &:focus {
      color: $value !important;
    }
  }
}

